import React, { useState } from "react";
import "../App.css";

const Keyboard = () => {
  const [inputText, setInputText] = useState("");
  const [compoundKeys, setCompoundKeys] = useState([]);

  // Base layout rows (like your mobile keyboard)
  const baseKeys = [
    ["ЁСАЕ", "ЁСАЖ", "ЁСАЗ", "ЁСАИ", "ЁСАЙ", "ЁСАК"],
    ["ЁСАПЁСБЖ", "ЁСАП", "ЁСАР", "ЁСАСЁСБЖ", "ЁСАС", "ЁСАТ", "├╖"],
    ["роХ", "роЪ", "роЯ", "род", "рок", "роо"],
    ["роп", "ро░", "ро▓", "ро╡", "ро┤", "ро│"],
    ["роЮ", "роЩ", "рог", "рои", "ро╖", "ро╕", "ро╣", "роХрпНро╖"],
  ];

  // Compound letters map (varisai)
  const compoundMap = {
    "роХ": ["роХ", "роХро╛", "роХро┐", "роХрпА", "роХрпБ", "роХрпВ", "роХрпЖ", "роХрпЗ", "роХрпИ", "роХрпК", "роХрпЛ", "роХрпМ"],
    "роЪ": ["роЪ", "роЪро╛", "роЪро┐", "роЪрпА", "роЪрпБ", "роЪрпВ", "роЪрпЖ", "роЪрпЗ", "роЪрпИ", "роЪрпК", "роЪрпЛ", "роЪрпМ"],
    "роЯ": ["роЯ", "роЯро╛", "роЯро┐", "роЯрпА", "роЯрпБ", "роЯрпВ", "роЯрпЖ", "роЯрпЗ", "роЯрпИ", "роЯрпК", "роЯрпЛ", "роЯрпМ"],
    "род": ["род", "родро╛", "родро┐", "родрпА", "родрпБ", "родрпВ", "родрпЖ", "родрпЗ", "родрпИ", "родрпК", "родрпЛ", "родрпМ"],
    "рок": ["рок", "рокро╛", "рокро┐", "рокрпА", "рокрпБ", "рокрпВ", "рокрпЖ", "рокрпЗ", "рокрпИ", "рокрпК", "рокрпЛ", "рокрпМ"],
    "роо": ["роо", "рооро╛", "рооро┐", "роорпА", "роорпБ", "роорпВ", "роорпЖ", "роорпЗ", "роорпИ", "роорпК", "роорпЛ", "роорпМ"],
    "роп": ["роп", "ропро╛", "ропро┐", "ропрпА", "ропрпБ", "ропрпВ", "ропрпЖ", "ропрпЗ", "ропрпИ", "ропрпК", "ропрпЛ", "ропрпМ"],
    "ро░": ["ро░", "ро░ро╛", "ро░ро┐", "ро░рпА", "ро░рпБ", "ро░рпВ", "ро░рпЖ", "ро░рпЗ", "ро░рпИ", "ро░рпК", "ро░рпЛ", "ро░рпМ"],
    "ро▓": ["ро▓", "ро▓ро╛", "ро▓ро┐", "ро▓рпА", "ро▓рпБ", "ро▓рпВ", "ро▓рпЖ", "ро▓рпЗ", "ро▓рпИ", "ро▓рпК", "ро▓рпЛ", "ро▓рпМ"],
    "ро╡": ["ро╡", "ро╡ро╛", "ро╡ро┐", "ро╡рпА", "ро╡рпБ", "ро╡рпВ", "ро╡рпЖ", "ро╡рпЗ", "ро╡рпИ", "ро╡рпК", "ро╡рпЛ", "ро╡рпМ"],
    "ро┤": ["ро┤", "ро┤ро╛", "ро┤ро┐", "ро┤рпА", "ро┤рпБ", "ро┤рпВ", "ро┤рпЖ", "ро┤рпЗ", "ро┤рпИ", "ро┤рпК", "ро┤рпЛ", "ро┤рпМ"],
    "ро│": ["ро│", "ро│ро╛", "ро│ро┐", "ро│рпА", "ро│рпБ", "ро│рпВ", "ро│рпЖ", "ро│рпЗ", "ро│рпИ", "ро│рпК", "ро│рпЛ", "ро│рпМ"],
    "роЮ": ["роЮ", "роЮро╛", "роЮро┐", "роЮрпА", "роЮрпБ", "роЮрпВ", "роЮрпЖ", "роЮрпЗ", "роЮрпИ", "роЮрпК", "роЮрпЛ", "роЮрпМ"],
    "роЩ": ["роЩ", "роЩро╛", "роЩро┐", "роЩрпА", "роЩрпБ", "роЩрпВ", "роЩрпЖ", "роЩрпЗ", "роЩрпИ", "роЩрпК", "роЩрпЛ", "роЩрпМ"],
    "рог": ["рог", "рогро╛", "рогро┐", "рогрпА", "рогрпБ", "рогрпВ", "рогрпЖ", "рогрпЗ", "рогрпИ", "рогрпК", "рогрпЛ", "рогрпМ"],
    "рои": ["рои", "роиро╛", "роиро┐", "роирпА", "роирпБ", "роирпВ", "роирпЖ", "роирпЗ", "роирпИ", "роирпК", "роирпЛ", "роирпМ"],
    "ро╖": ["ро╖", "ро╖ро╛", "ро╖ро┐", "ро╖рпА", "ро╖рпБ", "ро╖рпВ", "ро╖рпЖ", "ро╖рпЗ", "ро╖рпИ", "ро╖рпК", "ро╖рпЛ", "ро╖рпМ"],
    "ро╕": ["ро╕", "ро╕ро╛", "ро╕ро┐", "ро╕рпА", "ро╕рпБ", "ро╕рпВ", "ро╕рпЖ", "ро╕рпЗ", "ро╕рпИ", "ро╕рпК", "ро╕рпЛ", "ро╕рпМ"],
    "ро╣": ["ро╣", "ро╣ро╛", "ро╣ро┐", "ро╣рпА", "ро╣рпБ", "ро╣рпВ", "ро╣рпЖ", "ро╣рпЗ", "ро╣рпИ", "ро╣рпК", "ро╣рпЛ", "ро╣рпМ"],
    "роХрпНро╖": ["роХрпНро╖", "роХрпНро╖ро╛", "роХрпНро╖ро┐", "роХрпНро╖рпА", "роХрпНро╖рпБ", "роХрпНро╖рпВ", "роХрпНро╖рпЖ", "роХрпНро╖рпЗ", "роХрпНро╖рпИ", "роХрпНро╖рпК", "роХрпНро╖рпЛ", "роХрпНро╖рпМ"],
  };

  // Handle click
  const handleKeyClick = (char) => {
    if (compoundMap[char]) {
      setCompoundKeys(compoundMap[char]); // Show varisai
    } else {
      setInputText((prev) => prev + char); // Add letter
      setCompoundKeys([]); // Close compounds
    }
  };

  // Handle compound key click
  const handleCompoundClick = (char) => {
    setInputText((prev) => prev + char);
  };

  const handleClear = () => {
    setInputText("");
    setCompoundKeys([]);
  };

  return (
    <section className="section">
      <h2>родрооро┐ро┤рпН ро╡ро┐роЪрпИрокрпНрокро▓роХрпИ</h2>

      <div className="split-container">
        {/* Display box */}
        <div className="input-box">
          <div className="display-box">{inputText || "роЗроЩрпНроХрпЗ родроЯрпНроЯроЪрпНроЪрпБ роЪрпЖропрпНропро╡рпБроорпН..."}</div>

          {/* Keyboard */}
          <div className="keyboard">
            {baseKeys.map((row, i) => (
              <div key={i} className="keyboard-row">
                {row.map((key) => (
                  <button
                    key={key}
                    className="key-btn"
                    onClick={() => handleKeyClick(key)}
                  >
                    {key}
                  </button>
                ))}
              </div>
            ))}

            {/* Compound keys row */}
            {compoundKeys.length > 0 && (
              <div className="keyboard-row compound-row">
                {compoundKeys.map((ckey) => (
                  <button
                    key={ckey}
                    className="key-btn compound"
                    onClick={() => handleCompoundClick(ckey)}
                  >
                    {ckey}
                  </button>
                ))}
              </div>
            )}

            {/* Clear button */}
            <button className="key-btn clear" onClick={handleClear}>
              тМл Clear
            </button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Keyboard;
